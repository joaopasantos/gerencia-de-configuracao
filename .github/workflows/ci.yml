name: Testa, constrói e publica imagem Docker
run-name: ${{ github.actor }} fez ${{ github.event_name }} e acionou a integração contínua.

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
    - name: Faz checkout no repositório.
      uses: actions/checkout@v4
    - name: Prepara Python para execução. 🐍
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        architecture: 'x64'
        cache: 'pip'
    - name: Apresenta versão instalada do Python. 🐍
      run: python -c "import sys; print(sys.version)"
    - name: Atualiza o pip e instala dependências. ⌛
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Executa testes. 🧪
      run: |
        python test.py

  build-and-push-image:
    needs: test
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Faz checkout no repositório.
        uses: actions/checkout@v4
      - name: Realiza log in no registry do Container. 📦
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extrai metadata (tags, labels) para compor dados da imagem Docker. 🏷️
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Constrói e faz push da imagem Docker. 🐋
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
